name: R1S_H5_017

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'

env:
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-18.04

    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: 环境部署
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-1804)
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
          sudo timedatectl set-timezone "$TZ"
          sudo apt-get -y install curl ne bc build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler
          wget -O - https://raw.githubusercontent.com/friendlyarm/build-env-on-ubuntu-bionic/master/install.sh | bash

      - name: 安装 Repo
        run: |
          git clone https://github.com/friendlyarm/repo
          sudo cp repo/repo /usr/bin/

      - name: 下载 friendlywrt-h5 源码
        run: |
          mkdir friendlywrt-h5
          cd friendlywrt-h5
          repo init -u https://github.com/friendlyarm/friendlywrt_manifests -b master -m h5.xml --repo-url=https://github.com/friendlyarm/repo  --no-clone-bundle
          repo sync -c --no-clone-bundle -j8

      - name: SSH connection to Actions
        uses: P3TERX/ssh2actions@v1.0.0
        if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
        env:
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

#      - name: 整合 lede，定制编译配置
#        run: |
#          cd friendlywrt-h5
#          . ../remove_unused_config.sh
#          cat ../app_config.seed >> configs/config_h5
#          echo '# CONFIG_V2RAY_COMPRESS_UPX is not set' >> configs/config_h5
#          sed -i '/docker/Id;/containerd/Id;/runc/Id;/iptparser/Id' configs/config_h5 #fix compile error
#          sed -i '/docker/Id;/containerd/Id;/runc/Id;/iptparser/Id' ../config.r1s
#
#          cd friendlywrt
#          git config --local user.email "action@github.com"
#          git config --local user.name "GitHub Action"
#          git config merge.renameLimit 999999
#          git remote add upstream https://github.com/coolsnowwolf/openwrt
#          git fetch upstream
#          #git rebase 0f0c3f1a251f636df68050b75e296c6cc6965590^ --onto upstream/master -X theirs
#
#          mv feeds.conf.default feeds.conf.default.bak
#          touch feeds.conf.default
#          echo "src-git packages https://github.com/coolsnowwolf/packages;openwrt-19.07" >>feeds.conf.default
#          echo "src-git luci https://github.com/coolsnowwolf/luci" >>feeds.conf.default
#          echo "src-git routing https://git.openwrt.org/feed/routing.git;openwrt-19.07" >>feeds.conf.default
#          echo "src-git helloworld https://github.com/fw876/helloworld" >>feeds.conf.default
#          echo "src-git diy1 https://github.com/xiaorouji/openwrt-passwall.git;main" >>feeds.conf.default
#          #echo "src-git CKdiy https://github.com/Dboykey/CKdiy" >>feeds.conf.default
#          rm -rf package/lean/luci-theme-argon
#          git clone https://github.com/rosywrt/luci-theme-rosy.git package/lean/luci-theme-rosy
#          git clone -b master https://github.com/vernesong/OpenClash.git package/OpenClash
#          git clone https://github.com/Dboykey/CKdiy.git package/CKdiy
#
#          ./scripts/feeds update -a && ./scripts/feeds install -a
#
#      - name: SSH connection to Actions
#        uses: P3TERX/ssh2actions@v1.0.0
#        if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
#        env:
#          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
#          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
#
#      - name: 整合 lede，定制编译配置 02
#        run: |
#          cd friendlywrt-h5
#          echo -e '\nDboykey Build\n'  >> package/base-files/files/etc/banner
#          ##### 下面出错
#          #sed -i '/uci commit luci/i\\uci set luci.main.mediaurlbase=/luci-static/rosy' package/lean/default-settings/files/zzz-default-settings
#          #sed -i -e '/shadow/d' package/lean/default-settings/files/zzz-default-settings
#          #sed -i "/uci commit luci/a\\uci commit network" package/lean/default-settings/files/zzz-default-settings
#          #sed -i "/uci commit luci/a\\uci set network.lan.netmask='255.255.255.0'" package/lean/default-settings/files/zzz-default-settings
#          #sed -i "/uci commit luci/a\\uci set network.lan.ipaddr='192.168.2.1'" package/lean/default-settings/files/zzz-default-settings
#          #sed -i "/uci commit luci/a\\ " package/lean/default-settings/files/zzz-default-settings
#          #sed -i '/exit/i\mv /etc/rc.d/S25dockerd /etc/rc.d/S92dockerd && sed -i "s/START=25/START=92/g" S92dockerd' package/lean/default-settings/files/zzz-default-settings
#          #sed -i '/exit/i\chown -R root:root /usr/share/netdata/web' package/lean/default-settings/files/zzz-default-settings
#          #sed -i 's/高级重启/关机/' feeds/luci/applications/luci-app-advanced-reboot/po/zh-cn/advanced-reboot.po
#          #sed -i '9,12d' feeds/luci/applications/luci-app-diag-core/luasrc/controller/luci_diag.lua
#          #
#          #sed -i 's/option fullcone\t1/option fullcone\t0/' package/network/config/firewall/files/firewall.config
#          #sed -i '/8.8.8.8/d' package/base-files/files/root/setup.sh
#          #sed -i '/Load Average/i\<tr><td width="33%"><%:CPU Temperature%></td><td><%=luci.sys.exec("cut -c1-2 /sys/class/thermal/thermal_zone0/temp")%></td></tr>' feeds/luci/modules/luci-mod-admin-full/luasrc/view/admin_status/index.htm
#          #sed -i 's/pcdata(boardinfo.system or "?")/"ARMv8"/' feeds/luci/modules/luci-mod-admin-full/luasrc/view/admin_status/index.htm
#
#      - name: 第一次 原始编译 OpenWrt
#        run: |
#          cd friendlywrt-h5/friendlywrt
#          make defconfig
#          make download -j8
#          make V=s
#
#      - name: 第二次 定制编译 OpenWrt
#        run: |
#          cd friendlywrt-h5/friendlywrt
#          rm .config*
#          cp ../../config.r1s ./.config
#          make defconfig
#          make download -j8
#          make V=s

      - name: 生成 SD 镜像
        run: |
          cd friendlywrt-h5
#          sed -i '130,150 {/build_friendlywrt/d}' scripts/build.sh
          ./build.sh nanopi_r1s.mk

      - name: Zip 压缩文件
        run: |
          find friendlywrt-h5/out/ -name "FriendlyWrt_*img*" | xargs -i zip -r {}.zip {}

      - name: Assemble Artifact
        run: |
          rm -rf ./artifact/
          mkdir -p ./artifact/
          find friendlywrt-h5/out/ -name "FriendlyWrt_*img.zip*" | xargs -i mv -f {} ./artifact/

      - name: Upload Artifact
        uses: actions/upload-artifact@master
        with:
          name: FriendlyWrt_NanoPi-R1S H5 Lean
          path: ./artifact/
