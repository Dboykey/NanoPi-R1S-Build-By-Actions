name: R1S_H5_pass-1806

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'

env:
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-18.04

    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          # 环境部署
          sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-1804)
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
          sudo timedatectl set-timezone "$TZ"
          sudo apt-get -y install bc libtinfo5 build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev
          sudo apt-get -y install unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib autopoint
          sudo apt-get -y install msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool
          sudo apt-get -y install device-tree-compiler gcc-aarch64-linux-gnu patch p7zip p7zip-full
          sudo apt-get -y install curl ne screen htop libxcb-ewmh-dev parted dosfstools
          #gcc-9-aarch64-linux-gnu
          wget -O - https://raw.githubusercontent.com/friendlyarm/build-env-on-ubuntu-bionic/master/install.sh | bash

      - name: Install Repo
        run: |
          # 安装 Repo
          git clone https://github.com/friendlyarm/repo
          sudo cp repo/repo /usr/bin/

      - name: Download Source
        run: |
          # 下载 friendlywrt-h5 源码
          mkdir friendlywrt-h5
          cd friendlywrt-h5
          repo init -u https://github.com/friendlyarm/friendlywrt_manifests -b master -m h5.xml --repo-url=https://github.com/friendlyarm/repo  --no-clone-bundle
          repo sync -c --no-clone-bundle -j8

      - name: SSH connection to Actions
        uses: Dboykey/ssh2actions@v1.0.0
        if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
        env:
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

      - name: Merge UpStearm OpenWrt
        run: |
          # 调整 wrt 代码【非常重要】
          cd friendlywrt-h5
          rm -rf friendlywrt
          mkdir friendlywrt
          cd friendlywrt
          git init
          git config user.email abc@abc.com
          git config user.name abc
          git remote add origin https://github.com/friendlyarm/friendlywrt.git
          git remote add upstream https://github.com/openwrt/openwrt.git
          git pull origin master-v18.06.1
          git pull upstream openwrt-18.06 --no-edit

      - name: Plug-in for lede integration
        run: |
          # 融合 lede 的插件
          cd friendlywrt-h5
          git clone https://github.com/coolsnowwolf/lede 5.4
          cd 5.4
          ./scripts/feeds update -a
          cd ..
          git clone https://github.com/coolsnowwolf/openwrt 4.14
          cd 4.14
          ./scripts/feeds update -a
          #cd ..
          #git clone https://github.com/Lienol/openwrt Lienol
          #cd Lienol
          #./scripts/feeds update -a

          cp -r package/lean/ ../friendlywrt/package/
          cd ../friendlywrt/package/lean
          rm -rf baidupcs-web
          rm -rf luci-app-baidupcs-web
          rm -rf luci-theme-netgear
          rm -rf luci-theme-argon
          rm -rf samba4
          rm -rf luci-app-samba4
          rm -rf luci-app-docker
          rm -rf luci-lib-docker 
          rm -rf luci-app-n2n_v2
          rm -rf n2n_v2
          rm -rf luci-app-openvpn-server
          rm -rf luci-app-qbittorrent
          rm -rf qBittorrent
          rm -rf luci-app-softethervpn
          rm -rf softethervpn5
          rm -rf luci-app-vsftpd
          rm -rf vsftpd-alt
          rm -rf qt5
          rm -rf luci-app-webadmin
          rm -rf dns2socks
          rm -rf ipt2socks
          rm -rf kcptun
          rm -rf microsocks
          rm -rf pdnsd-alt
          rm -rf shadowsocksr-libev
          rm -rf simple-obfs
          rm -rf trojan
          rm -rf v2ray-plugin
          rm -rf k3*
          rm -rf luci-app-ssrserver-python
          rm -rf luci-app-cifsd
          rm -rf automount
          rm -rf ksmbd-tools
          rm -rf ksmbd

      - name: Code adjustments before updating the feed
        run: |
          # 更新下载 feed 前代码微调
          cd friendlywrt-h5/friendlywrt
          mv feeds.conf.default feeds.conf.default.bak
          touch feeds.conf.default
          echo "src-git packages https://git.openwrt.org/feed/packages.git;openwrt-18.06" >>feeds.conf.default
          echo "src-git routing https://git.openwrt.org/feed/routing.git;openwrt-18.06" >>feeds.conf.default
          echo "src-git luci https://github.com/coolsnowwolf/luci" >>feeds.conf.default
          git clone https://github.com/Dboykey/CKdiy.git package/CKdiy
          git clone https://github.com/xiaorouji/openwrt-passwall.git package/passwall
          git clone -b master https://github.com/vernesong/OpenClash.git ../add/OpenClash
          cp -r ../add/OpenClash/luci-app-openclash ./package/lean/
          git clone https://github.com/rosywrt/luci-theme-rosy.git ../add/Rosy
          cp -r ../add/Rosy/luci-theme-rosy ./package/lean/
          git clone https://github.com/linkease/ddnsto-openwrt.git ../add/ddnsto
          cp -r ../add/ddnsto/luci-app-ddnsto ./package/lean/
          cp -r ../add/ddnsto/ddnsto ./package/network/services/

      - name: Update feeds
        run: |
          # 更新下载 feeds
          cd friendlywrt-h5/friendlywrt
          ./scripts/feeds update -a

          rm -rf feed/luci/collections/luci-app-unbound
          rm -rf feed/luci/collections/luci-app-nginx
          rm -rf feed/luci/collections/luci-app-ssl-nginx
          rm -rf package/feeds/luci/luci-ssl-nginx
          rm -rf feeds/luci/collections/luci-nginx
          rm -rf feeds/luci/collections/luci-ssl-nginx
          rm -rf package/feeds/luci/luci-app-unbound
          rm -rf feeds/luci/applications/luci-app-unbound
          rm -rf package/feeds/luci/luci-app-transmission
          rm -rf feeds/luci/applications/luci-app-transmission

      - name: Code adjustments before installing the feed
        run: |
          # 安装 feed 前代码微调
          cd friendlywrt-h5/friendlywrt
          mv package/CKdiy/packr feeds/packages/devel/

          cp -r ../4.14/feeds/packages/libs/nss package/CKdiy/
          cp -r ../4.14/feeds/packages/libs/nspr package/CKdiy/
          cp -r ../4.14/feeds/packages/devel/ninja package/CKdiy/

          rm -rf feeds/packages/lang/golang
          cp -r ../5.4/feeds/packages/lang/golang ./feeds/packages/lang/
          rm -rf feeds/packages/admin/ipmitool
          cp -r ../5.4/feeds/packages/admin/ipmitool ./feeds/packages/admin/
          rm -rf package/libs/openssl
          cp -r ../4.14/package/libs/openssl ./package/libs/
          rm -rf package/libs/libevent2
          cp -r ../4.14/package/libs/libevent2 ./package/libs/
          rm -rf feeds/packages/libs/glib2
          cp -r ../4.14/feeds/packages/libs/glib2 ./feeds/packages/libs

          cp -r ../4.14/tools/upx ./tools/
          cp -r ../4.14/tools/ucl ./tools/
          rm tools/Makefile
          cp -r package/CKdiy/upx/Makefile tools/

          echo -e '\nDboykey Build\n'  >> package/base-files/files/etc/banner
          ln -s package/lean/default-settings/files/zzz-default-settings
          mkdir ../dl
          ln -s ../dl
          sed -i '/uci commit luci/i\\uci set luci.main.mediaurlbase=/luci-static/rosy' package/lean/default-settings/files/zzz-default-settings
          sed -i -e '/shadow/d' package/lean/default-settings/files/zzz-default-settings
          sed -i "/uci commit luci/a\\uci commit network" package/lean/default-settings/files/zzz-default-settings
          sed -i "/uci commit luci/a\\uci set network.lan.netmask='255.255.255.0'" package/lean/default-settings/files/zzz-default-settings
          sed -i "/uci commit luci/a\\uci set network.lan.ipaddr='192.168.2.1'" package/lean/default-settings/files/zzz-default-settings
          sed -i "/uci commit luci/a\\ " package/lean/default-settings/files/zzz-default-settings
          sed -i '/exit/i\chown -R root:root /usr/share/netdata/web' package/lean/default-settings/files/zzz-default-settings
          #cp -r ../5.4/feeds/luci/applications/luci-app-advanced-reboot/po/zh-cn feeds/luci/applications/luci-app-advanced-reboot/po/
          #sed -i 's/高级重启/关机/' feeds/luci/applications/luci-app-advanced-reboot/po/zh-cn/advanced-reboot.po
          sed -i 's/双分区启动切换/关机/' package/lean/default-settings/i18n/more.zh-cn.po
          sed -i '9,12d' feeds/luci/applications/luci-app-diag-core/luasrc/controller/luci_diag.lua

          cp feeds/luci/modules/luci-mod-admin-full/luasrc/view/admin_status/index.htm feeds/luci/modules/luci-mod-admin-full/luasrc/view/admin_status/index.htm.bak
          sed -i '/Load Average/i\<tr><td width="33%"><%:CPU Temperature%></td><td><%=luci.sys.exec("cut -c1-2 /sys/class/thermal/thermal_zone0/temp")%></td></tr>' feeds/luci/modules/luci-mod-admin-full/luasrc/view/admin_status/index.htm
          sed -i 's/pcdata(boardinfo.system or "?")/"ARMv8"/' feeds/luci/modules/luci-mod-admin-full/luasrc/view/admin_status/index.htm

      - name: Installing feeds
        run: |
          # 安装 feeds
          cd friendlywrt-h5/friendlywrt
          ./scripts/feeds install -a

      - name: Build OpenWrt
        run: |
          # 编译 OpenWrt
          cd friendlywrt-h5/friendlywrt
          cp ../../config.1806 ./.config
          make defconfig
          make download
          make tools/compile
          make toolchain/compile
          make package/feeds/luci/luci-base/compile

          cp dl/naiveproxy-88.0.4324.96-1.tar.gz build_dir/target-aarch64_cortex-a53_musl/
          cd ./build_dir/target-aarch64_cortex-a53_musl/
          tar zxvf naiveproxy-88.0.4324.96-1.tar.gz
          rm naiveproxy-88.0.4324.96-1.tar.gz
          cd ../../
          sed -i "s|sys/random.h|/usr/include/linux/random.h|g" build_dir/target-aarch64_cortex-a53_musl/naiveproxy-88.0.4324.96-1/src/base/rand_util_posix.cc

          make -j3

      - name: Build SD img
        run: |
          # 生成 SD 镜像
          cd friendlywrt-h5

          # 为生成SD镜像的脚本加入gzip压缩功能
          cp scripts/sd-fuse/mk-sd-image.sh scripts/sd-fuse/mk-sd-image.sh.bak
          sed -i '/space/a\\ls -l out/F*' scripts/sd-fuse/mk-sd-image.sh
          sed -i '/space/a\\echo "RAW image successfully compress"' scripts/sd-fuse/mk-sd-image.sh
          sed -i '/space/a\\gzip -9 out/F*' scripts/sd-fuse/mk-sd-image.sh
          sed -i '/space/a\\echo "---------------------------------"' scripts/sd-fuse/mk-sd-image.sh
          sed -i '/space/a\\ ' scripts/sd-fuse/mk-sd-image.sh

          # 删除重复编译wrt的步骤
          cp scripts/build.sh scripts/build.sh.bak
          sed -i '130,150 {/build_friendlywrt/d}' scripts/build.sh
          sed -i '295,302d' scripts/build.sh

          # 修改代码让其支持使用其他的wrt源码而不是特定的那套
          # 【实测确认，可以编译通过】
          sed -i 's/root-allwinner-h5/root-sunxi/' device/friendlyelec/h5/base.mk

          # 正式生成SD镜像
          ./build.sh nanopi_r1s.mk

      - name: Assemble Artifact
        run: |
          rm -rf ./artifact/
          mkdir -p ./artifact/
          find friendlywrt-h5/out/ -name "FriendlyWrt_*.gz" | xargs -i mv -f {} ./artifact/
          find h5/friendlywrt/bin/ -name "openwrt-sunxi-cortexa53-*-squashfs-sdcard.img.gz" | xargs -i mv -f {} ./artifact/

          #添加打包代码的命令进来，再添加发布到release的代码在后面

      - name: Upload Artifact
        uses: actions/upload-artifact@master
        with:
          # 压缩打包并提供下载
          name: FriendlyWrt_NanoPi-R1S H5 Lean
          path: ./artifact/

      - name: Delete workflow runs
        uses: GitRML/delete-workflow-runs@main
        with:
          retain_days: 1
          keep_minimum_runs: 3
