name: R1S_H5_ttt 调试专用

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: true
        default: 'true'

env:
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-18.04

    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          # 环境部署
          sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-1804)
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
          sudo timedatectl set-timezone "$TZ"
          sudo apt-get -y install bc libtinfo5 build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev
          sudo apt-get -y install unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib autopoint
          sudo apt-get -y install msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool
          sudo apt-get -y install device-tree-compiler gcc-aarch64-linux-gnu patch p7zip p7zip-full
          sudo apt-get -y install curl ne screen htop libxcb-ewmh-dev parted dosfstools
          wget -O - https://raw.githubusercontent.com/friendlyarm/build-env-on-ubuntu-bionic/master/install.sh | bash

      - name: Install Repo
        run: |
          # 安装 Repo
          git clone https://github.com/friendlyarm/repo
          sudo cp repo/repo /usr/bin/

      - name: Download Source
        run: |
          # 下载 friendlywrt-h5 源码
          mkdir friendlywrt-h5
          cd friendlywrt-h5
          repo init -u https://github.com/friendlyarm/friendlywrt_manifests -b master -m h5.xml --repo-url=https://github.com/friendlyarm/repo  --no-clone-bundle
          repo sync -c --no-clone-bundle -j8

      - name: SSH connection to Actions
        uses: Dboykey/ssh2actions@v1.0.0
        if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
        env:
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

      - name: Assemble Artifact
        run: |
          rm -rf ./artifact/
          mkdir -p ./artifact/
          find friendlywrt-h5/out/ -name "FriendlyWrt_*.gz" | xargs -i mv -f {} ./artifact/

          #添加打包代码的命令进来，再添加发布到release的代码在后面

      - name: Upload Artifact
        uses: actions/upload-artifact@master
        with:
          # 压缩打包并提供下载
          name: FriendlyWrt_NanoPi-R1S H5 Lean
          path: ./artifact/

      - name: Delete workflow runs
        uses: GitRML/delete-workflow-runs@main
        with:
          retain_days: 1
          keep_minimum_runs: 3
