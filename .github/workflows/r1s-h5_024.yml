name: R1S_H5_024

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'

env:
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-18.04

    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: 环境部署
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-1804)
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
          sudo timedatectl set-timezone "$TZ"
          sudo apt-get -y install curl ne screen htop bc libtinfo5 build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler
          wget -O - https://raw.githubusercontent.com/friendlyarm/build-env-on-ubuntu-bionic/master/install.sh | bash

      - name: 安装 Repo
        run: |
          git clone https://github.com/friendlyarm/repo
          sudo cp repo/repo /usr/bin/

      - name: 下载 friendlywrt-h5 源码
        run: |
          mkdir friendlywrt-h5
          cd friendlywrt-h5
          repo init -u https://github.com/friendlyarm/friendlywrt_manifests -b master -m h5.xml --repo-url=https://github.com/friendlyarm/repo  --no-clone-bundle
          repo sync -c --no-clone-bundle -j8

      - name: 调整 wrt 代码【非常重要】
        run: |
          cd friendlywrt-h5
          rm -rf friendlywrt
          mkdir friendlywrt
          cd friendlywrt
          git init
          git config user.email abc@abc.com
          git config user.name abc
          git remote add origin https://github.com/friendlyarm/friendlywrt.git
          git remote add upstream https://github.com/openwrt/openwrt.git
          git pull origin master-v18.06.1
          git pull upstream openwrt-18.06 --no-edit

      - name: 融合 lede 的插件
        run: |
          cd friendlywrt-h5
          git clone https://github.com/coolsnowwolf/lede 5.4
          cd 5.4
          ./scripts/feeds update -a
          cd ..
          git clone https://github.com/coolsnowwolf/openwrt 4.14
          cd 4.14
          ./scripts/feeds update -a

          cp -r package/lean/ ../friendlywrt/package/
          cd ../friendlywrt/package/lean
          rm -rf baidupcs-web
          rm -rf luci-app-baidupcs-web
          rm -rf luci-theme-netgear
          rm -rf luci-theme-argon
          rm -rf samba4
          rm -rf luci-app-samba4
          rm -rf luci-app-docker
          rm -rf luci-theme-netgear
          rm -rf luci-theme-argon
          rm -rf qt5
          rm -rf luci-app-n2n_v2
          rm -rf n2n_v2
          rm -rf luci-app-openvpn-server
          rm -rf luci-app-qbittorrent
          rm -rf qBittorrent
          rm -rf luci-app-softethervpn
          rm -rf softethervpn5
          rm -rf luci-app-webadmin
          rm -rf luci-lib-docker 
          rm -rf luci-proto-bonding
          rm -rf luci-app-sfe
          rm -rf luci-app-flowoffload
          rm -rf luci-app-vsftpd
          rm -rf vsftpd-alt

      - name: 更新下载 feed 前代码微调
        run: |
          cd friendlywrt-h5/friendlywrt
          mv feeds.conf.default feeds.conf.default.bak
          touch feeds.conf.default
          echo "src-git packages https://git.openwrt.org/feed/packages.git;openwrt-18.06" >>feeds.conf.default
          echo "src-git luci https://git.openwrt.org/project/luci.git;openwrt-18.06" >>feeds.conf.default
          echo "src-git routing https://git.openwrt.org/feed/routing.git;openwrt-18.06" >>feeds.conf.default
          echo "#src-git helloworld https://github.com/fw876/helloworld" >>feeds.conf.default
          echo "src-git diy1 https://github.com/xiaorouji/openwrt-passwall.git;main" >>feeds.conf.default
          echo "src-git OpenClash https://github.com/vernesong/OpenClash.git;master" >>feeds.conf.default
          git clone https://github.com/rosywrt/luci-theme-rosy.git package/lean/luci-theme-rosy
          git clone https://github.com/Dboykey/CKdiy.git package/CKdiy

      - name: 更新下载 feeds
        run: |
          cd friendlywrt-h5/friendlywrt
          ./scripts/feeds update -a

      - name: 安装 feed 前代码微调
        run: |
          cd friendlywrt-h5/friendlywrt
          mv package/CKdiy/packr feeds/packages/devel/

          cp -r ../5.4/feeds/packages/libs/nss package/CKdiy/
          cp -r ../5.4/feeds/packages/libs/nspr package/CKdiy/
          #cp -r ../5.4/feeds/packages/utils/zstd package/CKdiy/
          cp -r ../5.4/feeds/packages/devel/ninja package/CKdiy/
          #cp -r ../5.4/feeds/packages/devel/meson package/CKdiy/
          #cp -r ../5.4/feeds/packages/lang/python/python3 package/CKdiy/
          #cp -r ../5.4/package/system/ca-certificates package/CKdiy/

          #cp -r ../5.4/feeds/packages/libs/nss feeds/packages/libs/
          #cp -r ../5.4/feeds/packages/libs/nspr feeds/packages/libs/
          cp -r ../5.4/feeds/packages/utils/zstd feeds/packages/utils/
          #cp -r ../5.4/feeds/packages/devel/ninja feeds/packages/devel/
          cp -r ../5.4/feeds/packages/devel/meson feeds/packages/devel/

          #rm -rf feeds/packages/lang/python/python3
          #cp -r ../5.4/feeds/packages/lang/python/python3 feeds/packages/lang/python/python3
          #rm -rf package/system/ca-certificates
          #cp -r ../5.4/package/system/ca-certificates package/system/

          rm -rf feeds/packages/lang/golang
          cp -r ../5.4/feeds/packages/lang/golang ./feeds/packages/lang/
          rm -rf feeds/packages/admin/ipmitool
          cp -r ../5.4/feeds/packages/admin/ipmitool ./feeds/packages/admin/

          echo -e '\nDboykey Build\n'  >> package/base-files/files/etc/banner
          ln -s package/lean/default-settings/files/zzz-default-settings
          mkdir ../dl
          ln -s ../dl
          sed -i '/uci commit luci/i\\uci set luci.main.mediaurlbase=/luci-static/rosy' package/lean/default-settings/files/zzz-default-settings
          sed -i -e '/shadow/d' package/lean/default-settings/files/zzz-default-settings
          sed -i "/uci commit luci/a\\uci commit network" package/lean/default-settings/files/zzz-default-settings
          sed -i "/uci commit luci/a\\uci set network.lan.netmask='255.255.255.0'" package/lean/default-settings/files/zzz-default-settings
          sed -i "/uci commit luci/a\\uci set network.lan.ipaddr='192.168.2.1'" package/lean/default-settings/files/zzz-default-settings
          sed -i "/uci commit luci/a\\ " package/lean/default-settings/files/zzz-default-settings
          sed -i '/exit/i\chown -R root:root /usr/share/netdata/web' package/lean/default-settings/files/zzz-default-settings
          cp -r ../lede/feeds/luci/applications/luci-app-advanced-reboot/po/zh-cn feeds/luci/applications/luci-app-advanced-reboot/po/
          sed -i 's/高级重启/关机/' feeds/luci/applications/luci-app-advanced-reboot/po/zh-cn/advanced-reboot.po
          sed -i '9,12d' feeds/luci/applications/luci-app-diag-core/luasrc/controller/luci_diag.lua

          #rm -rf feeds/diy1/naiveproxy
          #cp -r ../4.14/feeds/helloworld/naiveproxy/ feeds/diy1/
          #pw的换ssr的，反了。本身pw的也通不过
          #安装sudo apt-get install libtinfo5,本地没有通过

      - name: 安装 feeds
        run: |
          cd friendlywrt-h5/friendlywrt
          ./scripts/feeds install -a

      - name: 第一次 原始编译 OpenWrt
        run: |
          cd friendlywrt-h5/friendlywrt
          touch .config
          echo "CONFIG_TARGET_sunxi=y" >>.config
          echo "CONFIG_TARGET_sunxi_cortexa53=y" >>.config
          echo "CONFIG_TARGET_sunxi_cortexa53_DEVICE_sun50i-h5-nanopi-neo-plus2=y" >>.config
          echo 'CONFIG_KERNEL_BUILD_USER="Dboykey"' >>.config
          echo "CONFIG_LUCI_LANG_en=y" >>.config
          echo "CONFIG_LUCI_LANG_zh-cn=y" >>.config
          echo "CONFIG_PACKAGE_default-settings=y" >>.config
          echo "# CONFIG_PACKAGE_dnsmasq is not set" >>.config
          echo "CONFIG_PACKAGE_dnsmasq-full=y" >>.config
          echo "CONFIG_PACKAGE_dnsmasq_full_auth=y" >>.config
          echo "CONFIG_PACKAGE_dnsmasq_full_conntrack=y" >>.config
          echo "CONFIG_PACKAGE_dnsmasq_full_dhcp=y" >>.config
          echo "CONFIG_PACKAGE_dnsmasq_full_dhcpv6=y" >>.config
          echo "CONFIG_PACKAGE_dnsmasq_full_dnssec=y" >>.config
          echo "CONFIG_PACKAGE_dnsmasq_full_ipset=y" >>.config
          echo "CONFIG_PACKAGE_dnsmasq_full_noid=y" >>.config
          echo "CONFIG_PACKAGE_kmod-ipt-ipset=y" >>.config
          echo "CONFIG_PACKAGE_kmod-nf-conntrack-netlink=y" >>.config
          echo "CONFIG_PACKAGE_kmod-nfnetlink=y" >>.config
          echo "CONFIG_PACKAGE_libgmp=y" >>.config
          echo "CONFIG_PACKAGE_libiwinfo-lua=y" >>.config
          echo "CONFIG_PACKAGE_liblua=y" >>.config
          echo "CONFIG_PACKAGE_liblucihttp=y" >>.config
          echo "CONFIG_PACKAGE_liblucihttp-lua=y" >>.config
          echo "CONFIG_PACKAGE_libmnl=y" >>.config
          echo "CONFIG_PACKAGE_libnetfilter-conntrack=y" >>.config
          echo "CONFIG_PACKAGE_libnettle=y" >>.config
          echo "CONFIG_PACKAGE_libnfnetlink=y" >>.config
          echo "CONFIG_PACKAGE_libubus-lua=y" >>.config
          echo "CONFIG_PACKAGE_lua=y" >>.config
          echo "CONFIG_PACKAGE_luci=y" >>.config
          echo "CONFIG_PACKAGE_luci-app-firewall=y" >>.config
          echo "CONFIG_PACKAGE_luci-base=y" >>.config
          echo "CONFIG_PACKAGE_luci-i18n-base-en=y" >>.config
          echo "CONFIG_PACKAGE_luci-i18n-base-zh-cn=y" >>.config
          echo "CONFIG_PACKAGE_luci-i18n-firewall-en=y" >>.config
          echo "CONFIG_PACKAGE_luci-i18n-firewall-zh-cn=y" >>.config
          echo "CONFIG_PACKAGE_luci-lib-ip=y" >>.config
          echo "CONFIG_PACKAGE_luci-lib-jsonc=y" >>.config
          echo "CONFIG_PACKAGE_luci-lib-nixio=y" >>.config
          echo "CONFIG_PACKAGE_luci-mod-admin-full=y" >>.config
          echo "CONFIG_PACKAGE_luci-proto-ipv6=y" >>.config
          echo "CONFIG_PACKAGE_luci-proto-ppp=y" >>.config
          echo "CONFIG_PACKAGE_luci-theme-bootstrap=y" >>.config
          echo "CONFIG_PACKAGE_luci-theme-rosy=y" >>.config
          echo "CONFIG_PACKAGE_rpcd=y" >>.config
          echo "CONFIG_PACKAGE_rpcd-mod-rrdns=y" >>.config
          echo "CONFIG_PACKAGE_uhttpd=y" >>.config
          make defconfig
          make download V=s
          make V=s

      - name: SSH connection to Actions
        uses: P3TERX/ssh2actions@v1.0.0
        if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
        env:
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}

      - name: 第二次 定制编译 OpenWrt
        run: |
          cd friendlywrt-h5/friendlywrt
          rm .config*
          cp ../../config.r1s ./.config
          make defconfig
          make download V=s
          make package/feeds/luci/luci-base/compile V=s
          make -j1 V=s

      - name: 生成 SD 镜像
        run: |
          cd friendlywrt-h5

          # 为生成SD镜像的脚本加入gzip压缩功能
          sed -i "/space/a\\echo 'RAW image successfully compress'" scripts/sd-fuse/mk-sd-image.sh
          sed -i "/space/a\\gzip -9 {RAW_FILE}" scripts/sd-fuse/mk-sd-image.sh
          sed -i 's/gzip -9 /gzip -9 $/'  scripts/sd-fuse/mk-sd-image.sh
          sed -i "/space/a\\echo '---------------------------------'" scripts/sd-fuse/mk-sd-image.sh
          sed -i "/space/a\\ " scripts/sd-fuse/mk-sd-image.sh

          # 删除重复编译wrt的步骤
          sed -i '130,150 {/build_friendlywrt/d}' scripts/build.sh

          # 正式生成SD镜像
          ./build.sh nanopi_r1s.mk

      #- name: Zip 压缩文件
      #  run: |
      #    find friendlywrt-h5/out/ -name "FriendlyWrt_*img*" | xargs -i zip -r {}.zip {}

      - name: Assemble Artifact
        run: |
          rm -rf ./artifact/
          mkdir -p ./artifact/
          find friendlywrt-h5/out/ -name "FriendlyWrt_*img.zip*" | xargs -i mv -f {} ./artifact/

      - name: Upload Artifact
        uses: actions/upload-artifact@master
        with:
          name: FriendlyWrt_NanoPi-R1S H5 Lean
          path: ./artifact/
